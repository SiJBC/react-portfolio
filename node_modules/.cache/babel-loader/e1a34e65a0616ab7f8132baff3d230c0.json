{"ast":null,"code":"import _slicedToArray from \"/Users/simoncolman/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simoncolman/Desktop/react-app/src/components/WorldWideCases.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nconst useStyles = makeStyles(theme => ({\n  cardContents: {\n    background: \"linear-gradient(to right, #ece9e6, #ffffff)\",\n    textAlign: \"center\"\n  },\n  textColor: {\n    color: \" #581845 \"\n  }\n}));\n\nconst WorldWideCases = props => {\n  const theme = useTheme();\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        globalData = _useState2[0],\n        setGlobalData = _useState2[1];\n\n  useEffect(() => {\n    let url = process.env.REACT_APP_PROD_API_URL;\n    axios.get(\"\".concat(url, \"all\"), {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        let globalDataArray = Object.entries(res.data);\n        globalDataArray.splice(-1);\n        setGlobalData(globalDataArray);\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.cardContents,\n    style: {\n      minWidth: \"20em\",\n      minHeight: \"20em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.textColor,\n    variant: matchesMD ? \"h5\" : \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Cases WorldWide\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), globalData.length === 0 ? React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Loading...\") : globalData.map(([key, value]) => {\n    return React.createElement(Typography, {\n      key: key,\n      variant: matchesMD ? \"h6\" : \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontSize: \"1.5em\",\n        color: \" #273746 \"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, key.charAt(0).toUpperCase() + key.slice(1), \" :\", \" \"), React.createElement(\"span\", {\n      style: {\n        fontSize: \"1em\",\n        fontWeight: \"bold\",\n        color: \"#C70039\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, value - 1));\n  }))));\n};\n\nexport default WorldWideCases;","map":{"version":3,"sources":["/Users/simoncolman/Desktop/react-app/src/components/WorldWideCases.js"],"names":["React","useEffect","useState","axios","Grid","Typography","makeStyles","useTheme","Card","CardContent","useMediaQuery","useStyles","theme","cardContents","background","textAlign","textColor","color","WorldWideCases","props","matchesMD","breakpoints","down","classes","globalData","setGlobalData","url","process","env","REACT_APP_PROD_API_URL","get","headers","then","res","status","globalDataArray","Object","entries","data","splice","catch","err","console","log","minWidth","minHeight","length","map","key","value","fontSize","charAt","toUpperCase","slice","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles(theme => ({\n  cardContents: {\n    background: \"linear-gradient(to right, #ece9e6, #ffffff)\",\n    textAlign: \"center\"\n  },\n  textColor: {\n    color: \" #581845 \"\n  }\n}));\n\nconst WorldWideCases = props => {\n  const theme = useTheme();\n  const matchesMD = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const classes = useStyles();\n\n  const [globalData, setGlobalData] = useState([]);\n  useEffect(() => {\n    let url = process.env.REACT_APP_PROD_API_URL;\n    axios\n      .get(`${url}all`, {\n        headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          let globalDataArray = Object.entries(res.data);\n          globalDataArray.splice(-1);\n          setGlobalData(globalDataArray);\n        }\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <Grid item>\n      <Card\n        className={classes.cardContents}\n        style={{ minWidth: \"20em\", minHeight: \"20em\" }}\n      >\n        <CardContent>\n          <Typography\n            className={classes.textColor}\n            variant={matchesMD ? \"h5\" : \"h3\"}\n          >\n            Cases WorldWide\n          </Typography>\n          <hr />\n          {globalData.length === 0 ? (\n            <Typography variant=\"h6\">Loading...</Typography>\n          ) : (\n            globalData.map(([key, value]) => {\n              return (\n                <Typography key={key} variant={matchesMD ? \"h6\" : \"h5\"}>\n                  <span style={{ fontSize: \"1.5em\", color: \" #273746 \" }}>\n                    {key.charAt(0).toUpperCase() + key.slice(1)} :{\" \"}\n                  </span>\n                  <span\n                    style={{\n                      fontSize: \"1em\",\n                      fontWeight: \"bold\",\n                      color: \"#C70039\"\n                    }}\n                  >\n                    {value - 1}\n                  </span>\n                </Typography>\n              );\n            })\n          )}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default WorldWideCases;\n"]},"metadata":{},"sourceType":"module"}